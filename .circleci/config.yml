####################
# CircleCI configuration reference:
#   https://circleci.com/docs/2.0/configuration-reference
####################
# CircleCI built-in environment variables:
#   https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables
####################

test_settings: &test_settings
  steps:
    - checkout
    - run: &run_tox_environment_matching_circleci_job_name
        name: Run tox job
        command: |
          pip install tox
          tox -e $CIRCLE_JOB
    - run:
        name: Submit code coverage data
        command: |
          curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod +x codecov
          ./codecov -F "$(basename $PWD | sed s/[^a-z]/_/g)"



####################
# Jobs: see https://circleci.com/docs/2.0/jobs-steps/
####################

version: 2
jobs:

  py310:
    <<: *test_settings
    docker:
      - image: cimg/python:3.10

  lint:
    docker:
      - image: cimg/python:3.10
    steps:
    - checkout
    - run:
        name: Run linting
        command: |
          pip install ruff
          ruff check src/ tests/

  # Runs when the repository is tagged for release; see the workflows section
  # below for trigger logic.
  deploy:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Install deployment tools
          command: |
            pip install --upgrade setuptools wheel twine
      - run:
          name: Create the distribution files
          command: |
            python setup.py sdist bdist_wheel
      - run:
          name: Upload to PyPI
          command: |
            # Relies on the TWINE_USERNAME and TWINE_PASSWORD environment variables configured at:
            #   https://circleci.com/gh/mozilla/mozanalysis/edit#env-vars
            # For more on twine, see:
            #   https://twine.readthedocs.io/en/latest/
            twine upload dist/*

  docs: &docs_settings
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          <<: *run_tox_environment_matching_circleci_job_name
      - persist_to_workspace:
          root: docs/_build
          paths: html

  docs-deploy:
    docker:
      - image: node:8.10.0
    steps:
      - checkout
      - attach_workspace:
          at: docs/_build
      - run:
          name: Disable jekyll builds
          command: touch docs/_build/html/.nojekyll
      # Needed for write access to the GitHub repository;
      # see https://circleci.com/docs/2.0/gh-bb-integration/#deployment-keys-and-user-keys
      - add_ssh_keys:
          fingerprints: "1d:46:d1:24:12:32:22:1c:2a:6e:c0:82:72:ab:00:31"
      # The gh-pages npm package looks to be the most widely used utility for
      # pushing a directory to a git branch;
      # see https://www.npmjs.com/package/gh-pages
      - run:
          name: Deploy docs to gh-pages branch
          command: |
            git config user.email "fx-data-platform@mozilla.com"
            git config user.name "CircleCI docs-deploy job"
            npm install -g --silent gh-pages@2.0.1
            gh-pages --dotfiles --message "[skip ci] Updates" --dist docs/_build/html

####################
# Workflows: see https://circleci.com/docs/2.0/workflows/
####################

workflows:
  version: 2
  build:
    jobs:
      - py310
      - lint
      - docs
      - docs-deploy:
          requires:
            - docs
          filters:
            branches:
              only: main
  tagged-deploy:
    jobs:
      - deploy:
          filters:
            tags:
              only: /[0-9]{4}.[0-9]{1,2}.[0-9]+/  # Calver: YYYY.M.MINOR
            branches:
              # Ignore all branches; this workflow should only run for tags.
              ignore: /.*/
